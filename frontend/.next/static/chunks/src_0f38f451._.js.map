{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/card.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  getStatisticalGuidance as getStatisticalGuidanceFlow,\n  type StatisticalGuidanceInput,\n  type StatisticalGuidanceOutput,\n} from '@/ai/flows/statistical-guide-flow';\nimport {\n  rbdAnalysisFlow as rbdAnalysisFlowGenkit,\n  rbdAnalysisInputSchema,\n} from '@/ai/flows/rbd-analysis-flow';\nimport { z } from 'zod';\nimport {\n  frbdAnalysisFlow as frbdAnalysisFlowGenkit,\n  frbdAnalysisInputSchema,\n} from '@/ai/flows/frbd-analysis-flow';\n\nexport async function getStatisticalGuidance(\n  input: StatisticalGuidanceInput\n): Promise<StatisticalGuidanceOutput> {\n  return await getStatisticalGuidanceFlow({...input});\n}\n\nexport async function generateRbdAnalysisSummary(\n  input: z.infer<typeof rbdAnalysisInputSchema>\n): Promise<string> {\n  return await rbdAnalysisFlowGenkit(input);\n}\n\nexport async function generateFrbdAnalysisSummary(\n  input: z.infer<typeof frbdAnalysisInputSchema>\n): Promise<string> {\n  return await frbdAnalysisFlowGenkit(input);\n}\n"],"names":[],"mappings":";;;;;;IA8BsB,8BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/app/frbd/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Upload, BarChart3, Info, Sparkles } from \"lucide-react\";\nimport * as XLSX from 'xlsx';\nimport { generateFrbdAnalysisSummary } from '../actions';\nimport DOMPurify from 'dompurify';\n\n\nexport default function FrbdPage() {\n  const [file, setFile] = useState<File | null>(null);\n  const [data, setData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n  const [columnHeaders, setColumnHeaders] = useState<string[]>([]);\n  const [missingValuesCount, setMissingValuesCount] = useState<number>(0);\n  \n  // State for FRBD analysis\n  const [blockCol, setBlockCol] = useState<string>('');\n  const [factor1Col, setFactor1Col] = useState<string>('');\n  const [factor2Col, setFactor2Col] = useState<string>('');\n  const [responseCol, setResponseCol] = useState<string>('');\n  const [frbdResults, setFrbdResults] = useState<any>(null);\n  const [frbdError, setFrbdError] = useState<string>('');\n  const [frbdLoading, setFrbdLoading] = useState(false);\n  const [analysisCompleted, setAnalysisCompleted] = useState(false);\n  const [showRawJson, setShowRawJson] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [countdown, setCountdown] = useState<number | null>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State for AI summary\n  const [aiSummary, setAiSummary] = useState<string>('');\n  const [aiSummaryLoading, setAiSummaryLoading] = useState(false);\n  const [aiSummaryError, setAiSummaryError] = useState<string>('');\n\n  useEffect(() => {\n    if (frbdResults && frbdResults.plots) {\n      console.log('frbdResults.plots:', frbdResults.plots);\n    }\n  }, [frbdResults]);\n\n  // Helper function to clean factor names\n  const cleanFactorName = (name: string) => {\n    // Extracts content from Q('...') or Q(\"...\")\n    const qMatches = [...name.matchAll(/Q\\(['\"]([^'\\\"]*)['\"]\\)/g)];\n    if (qMatches.length > 0) {\n      const factors = qMatches.map(m => m[1]);\n      return [...new Set(factors)].join(':');\n    }\n\n    // Handles C(...) for cases without Q(...) inside, like C(my_factor)\n    const cMatch = name.match(/^C\\((.+)\\)$/);\n    if (cMatch) {\n      return cMatch[1];\n    }\n\n    return name; // Return original name if no patterns match\n  };\n\n  const isValidBase64Image = (str: string) => {\n    if (!str || typeof str !== 'string') return false;\n    // Check if string is not excessively large (e.g., > 10MB)\n    const maxSize = 10 * 1024 * 1024 * 4 / 3; // 10MB in base64\n    return str.length < maxSize;\n  };\n\n  const renderResultsTable = (data: string, isSignificant?: boolean) => {\n    try {\n        // First, try to see if it's HTML content with a table\n        if (typeof data === 'string' && data.includes('<table')) {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(data, 'text/html');\n            const table = doc.querySelector('table');\n\n            if (table) {\n                const headers = Array.from(table.querySelectorAll('th')).map(th => th.textContent?.trim() || '');\n                const rows = Array.from(table.querySelectorAll('tbody tr')).map(tr =>\n                    Array.from(tr.querySelectorAll('td, th')).map(cell => cell.textContent?.trim() || '')\n                );\n\n                if (headers.length > 0 || rows.length > 0) {\n                    return (\n                        <div className=\"overflow-x-auto mb-6\">\n                            <table className=\"w-full border-collapse border border-green-300\">\n                                <thead className=\"bg-green-50\">\n                                    <tr className=\"bg-green-50\">\n                                        {headers.map((h, i) => <th key={`${h}-${i}`} className=\"border border-green-300 px-4 py-2 text-left\">{h}</th>)}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {rows.map((row, i) => (\n                                        <tr key={i}>\n                                            {row.map((cell, j) => <td key={`${i}-${j}`} className=\"border border-green-300 px-4 py-2\">{cell}</td>)}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    );\n                }\n            }\n        }\n        \n        let parsedData = JSON.parse(data);\n\n        if (isSignificant === false && Array.isArray(parsedData)) {\n            parsedData = parsedData.map(row => {\n                if (row.hasOwnProperty('Significance')) {\n                    return { ...row, Significance: 'NaN' };\n                }\n                return row;\n            });\n        }\n\n        // Case 1: Array of objects for Tukey/Mean Separation\n        if (Array.isArray(parsedData) && parsedData.length > 0) {\n            const headers = Object.keys(parsedData[0]);\n            \n            const sortedData = [...parsedData].sort((a, b) => {\n                const valA = a[headers[0]];\n                const valB = b[headers[0]];\n\n                if (typeof valA === 'string' && typeof valB === 'string') {\n                    return valA.localeCompare(valB);\n                }\n                if (typeof valA === 'number' && typeof valB === 'number') {\n                    return valA - valB;\n                }\n                return String(valA).localeCompare(String(valB));\n            });\n\n            return (\n                <div className=\"overflow-x-auto mb-6\">\n                    <table className=\"w-full border-collapse border border-green-300\">\n                        <thead className=\"bg-green-50\">\n                            <tr className=\"bg-green-50\">\n                                {headers.map(h => <th key={h} className=\"border border-green-300 px-4 py-2 text-left\">{h}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {sortedData.map((row, i) => (\n                                <tr key={i}>\n                                    {headers.map(h => (\n                                        <td key={`${i}-${h}`} className=\"border border-green-300 px-4 py-2\">\n                                            {h === 'reject'\n                                                ? String(row[h])\n                                                : (!isNaN(Number(row[h])) && row[h] !== null && String(row[h]).trim() !== ''\n                                                    ? Number(row[h]).toFixed(2)\n                                                    : String(row[h]))}\n                                        </td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n\n        // Case 2: Object of objects for ANOVA-like tables\n        const headers = Object.keys(parsedData);\n        if (headers.length > 0 && typeof parsedData[headers[0]] === 'object' && parsedData[headers[0]] !== null && !Array.isArray(parsedData[headers[0]])) {\n            const rowKeys = Object.keys(parsedData[headers[0]]);\n            return (\n                <div className=\"overflow-x-auto mb-6\">\n                    <table className=\"w-full border-collapse border border-green-300\">\n                        <thead className=\"bg-green-50\">\n                            <tr className=\"bg-green-50\">\n                                <th className=\"border border-green-300 px-4 py-2 text-left\"></th>\n                                {headers.map(h => <th key={h} className=\"border border-green-300 px-4 py-2 text-left\">{h}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rowKeys.map(key => (\n                                <tr key={key}>\n                                    <td className=\"border border-green-300 px-4 py-2 font-medium\">{key}</td>\n                                    {headers.map(h => <td key={`${key}-${h}`} className=\"border border-green-300 px-4 py-2\">{!isNaN(Number(parsedData[h][key])) && parsedData[h][key] !== null && String(parsedData[h][key]).trim() !== '' ? Number(parsedData[h][key]).toFixed(2) : String(parsedData[h][key])}</td>)}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n\n        throw new Error(\"JSON data is not in a recognized table format.\");\n    } catch (e) {\n        return <div className=\"overflow-x-auto bg-green-50 p-4 rounded-md mb-6\" dangerouslySetInnerHTML={{ __html: data }} />;\n    }\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const uploadedFile = event.target.files?.[0];\n    if (uploadedFile) {\n      setFile(uploadedFile);\n      setError('');\n      setData([]);\n      setFrbdResults(null);\n    }\n  };\n\n  const handleReset = () => {\n    setFile(null);\n    setData([]);\n    setError('');\n    setBlockCol('');\n    setFactor1Col('');\n    setFactor2Col('');\n    setResponseCol('');\n    setFrbdResults(null);\n    setFrbdError('');\n    setFrbdLoading(false);\n    setAnalysisCompleted(false);\n    setShowRawJson(false);\n    setMissingValuesCount(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''; // Clear the file input\n    }\n  };\n\n  const processFile = async () => {\n    if (!file) {\n      setError('Please select a file first');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const workbook = XLSX.read(arrayBuffer);\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: null });\n\n      if (jsonData.length === 0) {\n        setError('No data found in the file');\n        return;\n      }\n\n      let missingCount = 0;\n      jsonData.forEach(row => {\n        Object.values(row).forEach(value => {\n          if (value === null || value === undefined || value === '') {\n            missingCount++;\n          }\n        });\n      });\n      setMissingValuesCount(missingCount);\n\n      setData(jsonData);\n      const headers = Object.keys(jsonData[0] || {});\n      setColumnHeaders(headers);\n      console.log('Column Headers:', headers);\n    } catch (err) {\n      setError(\"Error processing file. Please ensure it's a valid Excel file.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFrbdAnalysis = async () => {\n    if (!file || !blockCol || !factor1Col || !factor2Col || !responseCol) {\n      setFrbdError('Please select a file and specify all column names.');\n      return;\n    }\n\n    // Validate column names exist in data\n    const headers = data.length > 0 ? Object.keys(data[0]) : [];\n    const missingCols = [];\n    if (!headers.includes(blockCol)) missingCols.push(`Block: ${blockCol}`);\n    if (!headers.includes(responseCol)) missingCols.push(`Response: ${responseCol}`);\n    if (!headers.includes(factor1Col)) missingCols.push(`Factor 1: ${factor1Col}`);\n    if (!headers.includes(factor2Col)) missingCols.push(`Factor 2: ${factor2Col}`);\n\n    if (missingCols.length > 0) {\n      setFrbdError(`Column(s) not found in data: ${missingCols.join('; ')}`);\n      return;\n    }\n\n    setFrbdLoading(true);\n    setFrbdError('');\n    setFrbdResults(null);\n    setAnalysisCompleted(false);\n    setCountdown(30);\n\n    intervalRef.current = setInterval(() => {\n      setCountdown(prev => (prev ? prev - 1 : null));\n    }, 1000);\n\n    const formData = new FormData();\n    const jsonData = JSON.stringify(data);\n    formData.append('data', jsonData);\n    formData.append('block_col', blockCol);\n    formData.append('factor_cols', [factor1Col, factor2Col].join(','));\n    formData.append('response_col', responseCol);\n\n    const frbdServiceUrl = process.env.NEXT_PUBLIC_FRBD_SERVICE_URL || 'https://frbd-service-737809041422.us-central1.run.app';\n\n    if (!frbdServiceUrl) {\n      setFrbdError('FRBD service URL not configured');\n      setFrbdLoading(false);\n      return;\n    }\n\n    try {\n      // Add timeout to prevent hanging requests\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n      \n      const response = await fetch(frbdServiceUrl, {\n        method: 'POST',\n        body: formData,\n        signal: controller.signal,\n      });\n      \n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n\n      const results = await response.json();\n      setFrbdResults(results);\n      setAnalysisCompleted(true);\n\n    } catch (err: any) {\n      if (err.name === 'AbortError') {\n        setFrbdError('Request timed out. Please try again.');\n      } else {\n        setFrbdError(err.message || 'An unexpected error occurred');\n      }\n    } finally {\n      setFrbdLoading(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      setCountdown(null);\n    }\n  };\n\n  const handleGenerateAiSummary = async () => {\n    if (!frbdResults) {\n      setAiSummaryError('Please run the FRBD analysis first.');\n      return;\n    }\n\n    setAiSummaryLoading(true);\n    setAiSummaryError('');\n    setAiSummary('');\n\n    try {\n      const input = {\n        anova_table: frbdResults.anova_table,\n        tukey_results: frbdResults.tukey_results,\n        shapiro: frbdResults.shapiro,\n        mean_separation_results: frbdResults.mean_separation_results,\n        overall_cv: frbdResults.overall_cv,\n        cd_value: frbdResults.cd_value,\n      };\n\n      const summary = await generateFrbdAnalysisSummary(input);\n      setAiSummary(summary);\n    } catch (err: any) {\n      setAiSummaryError(err.message || 'Failed to generate AI summary.');\n    } finally {\n      setAiSummaryLoading(false);\n    }\n  };\n\n\n  return (\n    <div className=\"min-h-screen bg-background p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <BarChart3 className=\"h-8 w-8 text-green-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold\">FRBD Analysis</h1>\n          </div>\n          <p className=\"text-muted-foreground\">\n            Upload your Excel file and perform Factorial Randomized Block Design (FRBD) analysis.\n          </p>\n        </div>\n\n\n\n        {/* File Upload Card */}\n        <Card className=\"mb-8 border border-green-200 rounded-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Upload className=\"h-5 w-5 mr-2\" />\n              Upload Data File\n            </CardTitle>\n            <CardDescription>\n              Select an Excel (.xlsx) file containing your data (up to 5 MB)\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"text-sm\">\n                Before uploading check out the required data format. \n                <Link href=\"/data_arrangement#frbd-section\" passHref>\n                  <Button variant=\"link\" className=\"p-1 h-auto ml-1, text-blue-600 hover:underline\">\n                  Read this to prepare your data.\n                  </Button>\n                </Link>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <Input\n                type=\"file\"\n                accept=\".xlsx,.xls\"\n                onChange={handleFileUpload}\n                className=\"flex-1 bg-green-50\"\n                ref={fileInputRef}\n              />\n              <Button \n                onClick={processFile} \n                disabled={!file || loading}\n                className=\"min-w-[120px]\"\n              >\n                {loading ? 'Processing...' : 'Process File'}\n              </Button>\n              <Button \n                onClick={handleReset} \n                variant=\"outline\"\n                disabled={!file && data.length === 0 && !frbdResults}\n                className=\"min-w-[120px]\"\n              >\n                Reset\n              </Button>\n            </div>\n            \n            {file && (\n              <div className=\"text-sm text-muted-foreground\">\n                Selected file: {file.name}\n              </div>\n            )}\n\n            {error && (\n              <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded\">\n                {error}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Data Preview */}\n        {data.length > 0 && (\n            <Card className=\"mb-8 border border-green-200 rounded-lg\">\n              <CardHeader>\n                <CardTitle>Data Preview</CardTitle>\n                <CardDescription>First 5 rows of the uploaded data.</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-green-200\">\n                    <thead className=\"bg-green-50\">\n                      <tr>\n                        {Object.keys(data[0] || {}).map((key) => (\n                          <th\n                            key={key}\n                            scope=\"col\"\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          >\n                            {key}\n                          </th>\n                        ))}\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-green-200\">\n                      {data.slice(0, 5).map((row, rowIndex) => (\n                        <tr key={rowIndex}>\n                          {Object.values(row).map((value: any, colIndex) => (\n                            <td\n                              key={colIndex}\n                              className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\n                            >\n                              {typeof value === 'number' ? value.toFixed(2) : value?.toString()}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-4 text-sm text-muted-foreground\">\n                  Total rows: {data.length}\n                </div>\n                {missingValuesCount > 0 && (\n                  <div className=\"mt-2 text-sm text-yellow-600\">\n                    Warning: Found {missingValuesCount} missing value(s) in your data. Rows with missing values will be excluded from the analysis.\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n        )}\n\n          <Card className=\"mb-8 border border-green-200 rounded-lg\">\n            <CardHeader>\n              <CardTitle>FRBD Analysis Setup</CardTitle>\n              <CardDescription>Specify the columns for the analysis.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block mb-1 font-medium\">Block Column (eg. replication)</label>\n                  <select\n                      value={blockCol}\n                      onChange={e => setBlockCol(e.target.value)}\n                      className=\"block w-full p-2 border border-green-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select a column</option>\n                    {columnHeaders.map(header => (\n                        <option key={header} value={header}>{header}</option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block mb-1 font-medium\">Response Column (eg. yield)</label>\n                  <select\n                      value={responseCol}\n                      onChange={e => setResponseCol(e.target.value)}\n                      className=\"block w-full p-2 border border-green-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select a column</option>\n                    {columnHeaders.map(header => (\n                        <option key={header} value={header}>{header}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block mb-1 font-medium\">Factor (1) Column</label>\n                  <select\n                      value={factor1Col}\n                      onChange={e => setFactor1Col(e.target.value)}\n                      className=\"block w-full p-2 border border-green-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select a column</option>\n                    {columnHeaders.map(header => (\n                        <option key={header} value={header}>{header}</option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block mb-1 font-medium\">Factor (2) Column</label>\n                  <select\n                      value={factor2Col}\n                      onChange={e => setFactor2Col(e.target.value)}\n                      className=\"block w-full p-2 border border-green-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select a column</option>\n                    {columnHeaders.map(header => (\n                        <option key={header} value={header}>{header}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </CardContent>\n            <div className=\"px-6 pb-6\">\n              <div className=\"flex items-center space-x-4\"> {/* Added flex container */}\n                <Button\n                  onClick={handleFrbdAnalysis}\n                  disabled={frbdLoading || !blockCol || !factor1Col || !factor2Col || !responseCol}\n                >\n                  {frbdLoading ? `Running Analysis... (${countdown}s)` : 'Run FRBD Analysis'}\n                </Button>\n                {analysisCompleted && !frbdLoading && (\n                  <div className=\"text-green-600 text-sm bg-green-50 p-3 rounded\"> {/* Removed mt-4 */}\n                    Analysis over. Results are below.\n                  </div>\n                )}\n              </div>\n              {frbdError && (\n                <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded mt-4\">\n                  {frbdError}\n                </div>\n              )}\n            </div>\n          </Card>\n\n          {frbdResults && (\n            <Card className=\"mb-8 border border-green-200 rounded-lg\">\n              <CardHeader>\n                <CardTitle>Diagnostic Plots and Normality Test</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <h3 className=\"text-lg font-semibold mb-2\">Diagnostic Plots</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {frbdResults.plots.residuals_vs_fitted && isValidBase64Image(frbdResults.plots.residuals_vs_fitted) && (\n                    <div className=\"border p-2 rounded-md\">\n                      <h4 className=\"text-md font-medium mb-1\">Residuals vs Fitted</h4>\n                      <Image\n                        src={`data:image/png;base64,${frbdResults.plots.residuals_vs_fitted}`}\n                        alt=\"Residuals vs Fitted Plot\"\n                        width={500}\n                        height={300}\n                        className=\"w-full h-auto\"\n                      />\n                    </div>\n                  )}\n                  {frbdResults.plots.qq_plot && isValidBase64Image(frbdResults.plots.qq_plot) && (\n                    <div className=\"border p-2 rounded-md\">\n                      <h4 className=\"text-md font-medium mb-1\">Normal Q-Q Plot</h4>\n                      <Image\n                        src={`data:image/png;base64,${frbdResults.plots.qq_plot}`}\n                        alt=\"Normal Q-Q Plot\"\n                        width={500}\n                        height={300}\n                        className=\"w-full h-auto\"\n                      />\n                    </div>\n                  )}\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">Shapiro-Wilk Test for Normality of Residuals</h3>\n                {frbdResults.shapiro && (\n                  <div className=\"bg-green-50 p-4 rounded-md mb-6\">\n                    <p><strong>Statistic:</strong> {frbdResults.shapiro.stat.toFixed(4)}</p>\n                    <p><strong>P-value:</strong> {frbdResults.shapiro.p.toFixed(4)}</p>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      {frbdResults.shapiro.p < 0.05\n                        ? \"Residuals are likely not normally distributed (p < 0.05).\"\n                        : \"Residuals appear to be normally distributed (p >= 0.05).\"}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          )}\n\n          {frbdResults && (\n            <Card className=\"mb-8 border border-green-200 rounded-lg\">\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>FRBD Analysis Results</CardTitle>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => setShowRawJson(!showRawJson)}>\n                    {showRawJson ? 'Hide' : 'Show'} Raw JSON\n                </Button>\n              </CardHeader>\n              {showRawJson && (\n                <CardContent>\n                    <pre className=\"p-4 bg-gray-100 rounded-md overflow-x-auto\">\n                    {JSON.stringify(frbdResults, null, 2)}\n                    </pre>\n                </CardContent>\n              )}\n              <CardContent>\n                <h3 className=\"text-lg font-semibold mb-2\">ANOVA Table</h3>\n                <div className=\"overflow-x-auto mb-6\">\n                  {frbdResults.anova_table && (() => {\n                    try {\n                      const parsedAnovaTable = JSON.parse(frbdResults.anova_table);\n                      const columnHeaders = Object.keys(parsedAnovaTable);\n                      const rowCount = columnHeaders.length > 0 ? Object.keys(parsedAnovaTable[columnHeaders[0]]).length : 0;\n\n                      if (rowCount === 0) {\n                        return <p>ANOVA table is empty or could not be parsed. Raw data: {frbdResults.anova_table}</p>;\n                      }\n\n                      return (\n                        <table className=\"w-full border-collapse border border-green-300\">\n                          <thead>\n                            <tr className=\"bg-green-50\">\n                              <th className=\"border border-green-300 px-4 py-2 text-left\">Source of error</th>\n                              {columnHeaders.map((header, index) => (\n                                <th key={index} className=\"border border-green-300 px-4 py-2 text-left\">\n                                  {header}\n                                </th>\n                              ))}\n                              <th className=\"border border-green-300 px-4 py-2 text-left\">Significance (alpha=0.05)</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {Object.keys(parsedAnovaTable[columnHeaders[0]]).map((rowIndex) => {\n                              const pValue = parsedAnovaTable['PR(>F)']?.[rowIndex];\n                              const showSignificance = pValue !== null && pValue !== undefined;\n\n                              return (\n                                <tr key={rowIndex}>\n                                  <td className=\"border border-green-300 px-4 py-2 font-medium\">\n                                    {cleanFactorName(rowIndex)}\n                                  </td>\n                                  {columnHeaders.map((header, colIndex) => (\n                                    <td key={colIndex} className=\"border border-green-300 px-4 py-2\">\n                                      {parsedAnovaTable[header][rowIndex]}\n                                    </td>\n                                  ))}\n                                  <td className=\"border border-green-300 px-4 py-2\">\n                                    {showSignificance ? (pValue < 0.05 ? 'Significant' : 'Not significant') : ''}\n                                  </td>\n                                </tr>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n                      );\n                    } catch (e) {\n                      console.error(\"Error parsing ANOVA table:\", e);\n                      return <p>Error loading ANOVA table. Raw data: {frbdResults.anova_table}</p>;\n                    }\n                  })()}\n                </div>\n\n                {frbdResults.overall_cv !== null && frbdResults.overall_cv !== undefined && (\n                    <div className=\"text-left text-sm text-muted-foreground mb-5\">\n                        Overall CV (%): {frbdResults.overall_cv.toFixed(2)}\n                    </div>\n                )}\n\n                <h3 className=\"text-lg font-semibold mb-2\">Tukey HSD Post-Hoc Tests</h3>\n                {frbdResults.tukey_results && Object.keys(frbdResults.tukey_results).map((factor) => (\n                  <div key={factor} className=\"mb-4\">\n                    <h4 className=\"text-md font-medium mb-1\">Factor: {cleanFactorName(factor)}</h4>\n                    {renderResultsTable(frbdResults.tukey_results[factor])}\n                  </div>\n                ))}\n\n                <h3 className=\"text-lg font-semibold my-4\">Mean Separation Results</h3>\n                {frbdResults.mean_separation_results && Object.keys(frbdResults.mean_separation_results).map((factor) => {\n                  const cleanedFactorName = cleanFactorName(factor);\n                  return (\n                    <div key={factor} className=\"mb-4\">\n                      <h4 className=\"text-md font-medium mb-1\">Factor: {cleanedFactorName}</h4>\n                      {renderResultsTable(frbdResults.mean_separation_results[factor])}\n                    </div>\n                  )\n                })}\n\n                {frbdResults.cd_value !== null && frbdResults.cd_value !== undefined && (\n                    <div className=\"text-left text-sm text-muted-foreground mb-5\">\n                        Critical Difference (CD): {frbdResults.cd_value.toFixed(2)}\n                    </div>\n                )}\n\n                \n                  <h3 className=\"text-lg font-semibold mb-2\">Mean Plots</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {[factor1Col, factor2Col].map(factor => (\n                      frbdResults.plots[`mean_bar_plot_${factor}`] && isValidBase64Image(frbdResults.plots[`mean_bar_plot_${factor}`]) && (\n                        <div key={`bar-plot-${factor}`} className=\"border p-2 rounded-md\">\n                          <h4 className=\"text-md font-medium mb-1\">Bar Plot for {factor}</h4>\n                          <Image\n                            src={`data:image/png;base64,${frbdResults.plots[`mean_bar_plot_${factor}`]}`}\n                            alt={`Bar Plot for ${factor}`}\n                            width={500}\n                            height={300}\n                            className=\"w-full h-auto\"\n                          />\n                        </div>\n                      )\n                    ))}\n                    {[factor1Col, factor2Col].map(factor => (\n                      frbdResults.plots[`mean_box_plot_${factor}`] && isValidBase64Image(frbdResults.plots[`mean_box_plot_${factor}`]) && (\n                        <div key={`box-plot-${factor}`} className=\"border p-2 rounded-md\">\n                          <h4 className=\"text-md font-medium mb-1\">Box Plot for {factor}</h4>\n                          <Image\n                            src={`data:image/png;base64,${frbdResults.plots[`mean_box_plot_${factor}`]}`}\n                            alt={`Box Plot for ${factor}`}\n                            width={500}\n                            height={300}\n                            className=\"w-full h-auto\"\n                          />\n                        </div>\n                      )\n                    ))}\n                  </div>\n\n                  </CardContent>\n            </Card>\n          )}\n\n          {frbdResults && (\n            <Card className=\"mb-8 border border-green-200 rounded-lg\">\n              <CardHeader>\n                <CardTitle>AI-Powered Summary</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Button onClick={handleGenerateAiSummary} disabled={aiSummaryLoading}>\n                  <Sparkles className=\"h-4 w-4 mr-2\" />\n                  {aiSummaryLoading ? 'Generating Summary...' : 'Generate AI Summary'}\n                </Button>\n                {aiSummaryError && (\n                  <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded mt-4\">\n                    {aiSummaryError}\n                  </div>\n                )}\n                {aiSummary && (\n                  <div className=\"prose prose-sm max-w-none mt-4\" dangerouslySetInnerHTML={{ __html: aiSummary.replace(/\\n/g, '<br />') }} />\n                )}\n              </CardContent>\n              <CardContent>\n                <Button disabled>\n                  Generate Report\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}