{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/card.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/components/ui/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/gajendrababubaktavachalam/WebApps/statviz/stats/frontend/src/app/tranx/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport Link from 'next/link';\nimport { Button } from \"@/components/ui/button\";\nimport * as Dialog from \"@radix-ui/react-dialog\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Upload, Replace, Download, CheckCircle, Info } from \"lucide-react\";\nimport * as XLSX from 'xlsx';\n\ninterface SkewnessData {\n    untransformed: number | null;\n    log: number | null;\n    sqrt: number | null;\n    boxcox: number | null;\n    arcsine?: number | null;\n    arcsine_percentage?: number | null;\n    yeo_johnson?: number | null;\n}\n\ninterface AnalysisResult {\n    skewness: SkewnessData;\n    suggestion: string;\n    originalNormalityInterpretation?: string;\n    suggestedTransformationFormula?: string;\n    all_scores?: { [key: string]: number };\n    original_normality: {\n        shapiro_wilk?: { name: string; interpretation: string; };\n        dagostino_pearson?: { name: string; interpretation: string; };\n        kolmogorov_smirnov: { name: string; interpretation: string; };\n        descriptive_stats: { skewness_interpretation: string; kurtosis_interpretation: string; };\n        overall_assessment: { recommendation: string; };\n    };\n}\n\ninterface BackendAnalysisResult {\n    recommendation: string;\n    score: number;\n    reason: string;\n    original_normality: {\n        shapiro_wilk?: { name: string; statistic: number; p_value: number; is_normal: boolean; interpretation: string; };\n        dagostino_pearson?: { name: string; statistic: number; p_value: number; is_normal: boolean; interpretation: string; };\n        kolmogorov_smirnov: { name: string; statistic: number; p_value: number; is_normal: boolean; interpretation: string; };\n        descriptive_stats: { skewness: number; kurtosis: number; skewness_interpretation: string; kurtosis_interpretation: string; };\n        overall_assessment: { likely_normal: boolean; recommendation: string; };\n    };\n    transformation_details?: {\n        data: number[];\n        formula: string;\n        applicable: boolean;\n        normality_tests: any;\n    };\n    all_scores?: { [key: string]: number };\n    suggested_transformation?: {\n        data: number[];\n        formula: string;\n        applicable: boolean;\n        normality_tests: any;\n    };\n}\n\nexport default function TranxPage() {\n  const [file, setFile] = useState<File | null>(null);\n  const [data, setData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n  const [columnHeaders, setColumnHeaders] = useState<string[]>([]);\n  const [missingValuesCount, setMissingValuesCount] = useState<number>(0);\n\n  // State for column selection\n  const [blockCol, setBlockCol] = useState<string>('');\n  const [factorCol, setFactorCol] = useState<string>('');\n  const [responseCol, setResponseCol] = useState<string>('');\n\n  // State for analysis\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const [analysisLoading, setAnalysisLoading] = useState(false);\n  const [analysisError, setAnalysisError] = useState<string>('');\n\n  // State for transformation\n  const [transformChoice, setTransformChoice] = useState<string>('untransformed');\n  const [transformedData, setTransformedData] = useState<any[]>([]);\n  const [transformError, setTransformError] = useState<string>('');\n  const [transformLoading, setTransformLoading] = useState(false);\n  const [originalResponseCol, setOriginalResponseCol] = useState<string>('');\n  const [transformedResponseCol, setTransformedResponseCol] = useState<string>('');\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const uploadedFile = event.target.files?.[0];\n    if (uploadedFile) {\n      setFile(uploadedFile);\n    }\n  };\n\n  const handleReset = () => {\n    setFile(null);\n    setData([]);\n    setError('');\n    setColumnHeaders([]);\n    setMissingValuesCount(0);\n    setBlockCol('');\n    setFactorCol('');\n    setResponseCol('');\n    setAnalysisResult(null);\n    setAnalysisLoading(false);\n    setAnalysisError('');\n    setTransformChoice('untransformed');\n    setTransformedData([]);\n    setTransformError('');\n    setTransformLoading(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const processFile = async () => {\n    if (!file) {\n      setError('Please select a file first');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const workbook = XLSX.read(arrayBuffer);\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: null });\n\n      if (jsonData.length === 0) {\n        setError('No data found in the file');\n        return;\n      }\n      \n      let missingCount = 0;\n      jsonData.forEach(row => {\n        Object.values(row).forEach(value => {\n          if (value === null || value === undefined || value === '') {\n            missingCount++;\n          }\n        });\n      });\n      setMissingValuesCount(missingCount);\n\n      setData(jsonData);\n      setColumnHeaders(Object.keys(jsonData[0] || {}));\n    } catch (err) {\n      setError(\"Error processing file. Please ensure it's a valid Excel file.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnalyze = useCallback(async () => {\n    if (!data.length || !responseCol) {\n      setAnalysisError('Please process a file and select a response column.');\n      return;\n    }\n\n    setAnalysisLoading(true);\n    setAnalysisError('');\n    setAnalysisResult(null);\n\n    const analyzeServiceUrl = 'http://localhost:8080/analyze_transformations';\n\n    try {\n      const response = await fetch(analyzeServiceUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data, response_col: responseCol }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n\n      const results: BackendAnalysisResult = await response.json();\n\n      const newSkewnessData: SkewnessData = {\n          untransformed: results.original_normality.descriptive_stats.skewness,\n          log: results.transformation_details?.normality_tests?.log?.descriptive_stats?.skewness ?? null,\n          sqrt: results.transformation_details?.normality_tests?.square_root?.descriptive_stats?.skewness ?? null,\n          boxcox: results.transformation_details?.normality_tests?.box_cox?.descriptive_stats?.skewness ?? null,\n          arcsine: results.transformation_details?.normality_tests?.arcsine?.descriptive_stats?.skewness ?? null,\n          arcsine_percentage: results.transformation_details?.normality_tests?.arcsine_percentage?.descriptive_stats?.skewness ?? null,\n          yeo_johnson: results.transformation_details?.normality_tests?.yeo_johnson?.descriptive_stats?.skewness ?? null,\n      };\n\n      setAnalysisResult({\n          skewness: newSkewnessData,\n          suggestion: results.recommendation,\n          originalNormalityInterpretation: results.original_normality.overall_assessment.recommendation,\n          suggestedTransformationFormula: results.suggested_transformation?.formula,\n          all_scores: results.all_scores,\n          original_normality: results.original_normality,\n      });\n      \n      const recommendationMap: { [key: string]: string } = {\n        'square_root': 'sqrt',\n        'box_cox': 'boxcox',\n      };\n      const recommendedChoice = recommendationMap[results.recommendation] || results.recommendation;\n      setTransformChoice(recommendedChoice || 'untransformed');\n\n    } catch (err: any) {\n      setAnalysisError(err.message || 'An unexpected error occurred during analysis');\n    } finally {\n      setAnalysisLoading(false);\n    }\n  }, [data, responseCol]);\n\n  useEffect(() => {\n    if (responseCol && data.length > 0) {\n      handleAnalyze();\n    }\n  }, [responseCol, data, handleAnalyze]);\n\n  const handleTransform = async () => {\n    if (!data.length || !responseCol || !transformChoice) {\n      setTransformError('Please process a file, select a response column, and a transformation type.');\n      return;\n    }\n\n    setTransformLoading(true);\n    setTransformError('');\n    setTransformedData([]);\n\n    const tranxServiceUrl = 'http://localhost:8080/transform';\n\n    try {\n      const response = await fetch(tranxServiceUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data, response_col: responseCol, transform_choice: transformChoice }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Transformation failed');\n      }\n\n      const results = await response.json();\n      setTransformedData(JSON.parse(results.transformed_data));\n      setOriginalResponseCol(results.original_response_col);\n      setTransformedResponseCol(results.transformed_response_col);\n\n    } catch (err: any) {\n      setTransformError(err.message || 'An unexpected error occurred');\n    } finally {\n      setTransformLoading(false);\n    }\n  };\n\n  const previewData = transformedData.length > 0 && blockCol && factorCol && originalResponseCol && transformedResponseCol ? \n    data.map((row, index) => ({\n      [factorCol]: row[factorCol]?.toString(),\n      [blockCol]: row[blockCol]?.toString(),\n      [originalResponseCol]: row[originalResponseCol],\n      [transformedResponseCol]: transformedData[index] ? transformedData[index][transformedResponseCol] : null,\n    })) : [];\n\n  const handleExport = () => {\n    if (previewData.length === 0) {\n      return;\n    }\n\n    const headers = [factorCol, blockCol, originalResponseCol, transformedResponseCol];\n    const csvContent = [\n      headers.join(','),\n      ...previewData.map(row => headers.map(header => row[header]).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'transformed_data.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background p-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <Replace className=\"h-8 w-8 text-pink-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold\">Data Transformation</h1>\n          </div>\n          <p className=\"text-muted-foreground\">\n            Upload your data, analyze distributions, and apply transformations.\n          </p>\n        </div>\n\n        <Dialog.Root>\n          <Dialog.Trigger asChild>\n            <Button variant=\"outline\" className=\"mb-4 flex items-center\">\n              <Info className=\"h-4 w-4 mr-2\" />\n              About Data Transformations\n            </Button>\n          </Dialog.Trigger>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/30\" />\n            <Dialog.Content className=\"fixed left-1/2 top-1/2 w-full max-w-2xl -translate-x-1/2 -translate-y-1/2 rounded-md bg-white p-10 text-gray-900 shadow-lg\">\n              <Dialog.Title className=\"text-lg font-medium\">About Data Transformations</Dialog.Title>\n              <Dialog.Description className=\"mt-2 text-sm text-gray-600\">\n                This guide explains the different data transformations available and how the tool works.\n              </Dialog.Description>\n              <div className=\"grid gap-1 py-4 text-sm\">\n                <h3 className=\"font-semibold text-lg\">What transformations can this tool perform?</h3>\n                <p>This tool can perform several common data transformations to help normalize your data:</p>\n                <ul className=\"list-disc list-inside space-y-1 pl-4\">\n                  <li><strong>Log Transformation:</strong> Effective for data that is right-skewed. An offset is automatically added for zero or negative values.</li>\n                  <li><strong>Square Root Transformation:</strong> A gentler transformation than Log, also used for right-skewed data. An offset is added for negative values.</li>\n                  <li><strong>Box-Cox Transformation:</strong> A powerful transformation that finds the best exponent to normalize data. It requires all data to be positive.</li>\n                  <li><strong>Yeo-Johnson Transformation:</strong> An extension of the Box-Cox transformation that can handle both positive and negative data.</li>\n                  <li><strong>Arcsine Transformation:</strong> Primarily used for proportion data where values are between 0 and 1.</li>\n                </ul>\n                <h3 className=\"font-semibold text-lg mt-4\">How does the tool work?</h3>\n                <p>The tool evaluates your data against key assumptions of normality. It checks for:</p>\n                <ul className=\"list-disc list-inside space-y-1 pl-4\">\n                  <li><strong>Normality:</strong> Using statistical tests (like Shapiro-Wilk) to see if the data follows a normal (Gaussian) distribution.</li>\n                  <li><strong>Skewness:</strong> Measuring the asymmetry of the data distribution.</li>\n                  <li><strong>Kurtosis:</strong> Measuring the &quot;tailedness&quot; of the distribution.</li>\n                </ul>\n                <h3 className=\"font-semibold text-lg mt-4\">About the Recommendation Score</h3>\n                <p>The tool applies each suitable transformation and re-evaluates the transformed data. It then calculates a &quot;recommendation score&quot; for each one based on how well it has corrected issues like non-normality and skewness. The transformation with the highest score is presented as the recommended option.</p>\n              </div>\n              <Dialog.Close asChild>\n                <Button variant=\"outline\" className=\"mt-4\">Close</Button>\n              </Dialog.Close>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n\n       <Card className=\"mb-8 border border-pink-200 rounded-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Upload className=\"h-5 w-5 mr-2\" />\n              1. Upload Data File\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Input type=\"file\" accept=\".xlsx,.xls\" onChange={handleFileUpload} className=\"flex-1 bg-pink-50\" ref={fileInputRef} />\n              <Button onClick={processFile} disabled={!file || loading} className=\"min-w-[120px]\">\n                {loading ? 'Processing...' : 'Process File'}\n              </Button>\n              <Button onClick={handleReset} variant=\"outline\" className=\"min-w-[120px]\">Reset</Button>\n            </div>\n            {file && <div className=\"text-sm text-muted-foreground\">Selected file: {file.name}</div>}\n            {error && <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded\">{error}</div>}\n          </CardContent>\n        </Card>\n\n        {data.length > 0 && (\n          <Card className=\"mb-8 border border-pink-200 rounded-lg\">\n            <CardHeader>\n              <CardTitle>2. Select Columns</CardTitle>\n              <CardDescription>Specify columns for analysis.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block mb-1 font-medium\">Block Column</label>\n                <select value={blockCol} onChange={e => setBlockCol(e.target.value)} className=\"block w-full p-2 border border-pink-300 rounded-md shadow-sm\">\n                  <option value=\"\">Select a column</option>\n                  {columnHeaders.map(header => <option key={header} value={header}>{header}</option>)}\n                </select>\n              </div>\n              <div>\n                <label className=\"block mb-1 font-medium\">Factor Column</label>\n                <select value={factorCol} onChange={e => setFactorCol(e.target.value)} className=\"block w-full p-2 border border-pink-300 rounded-md shadow-sm\">\n                  <option value=\"\">Select a column</option>\n                  {columnHeaders.map(header => <option key={header} value={header}>{header}</option>)}\n                </select>\n              </div>\n              <div>\n                <label className=\"block mb-1 font-medium\">Response Column</label>\n                <select value={responseCol} onChange={e => setResponseCol(e.target.value)} className=\"block w-full p-2 border border-pink-300 rounded-md shadow-sm\">\n                  <option value=\"\">Select a column</option>\n                  {columnHeaders.map(header => <option key={header} value={header}>{header}</option>)}\n                </select>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {analysisLoading && <div className=\"text-center\">Analyzing transformations...</div>}\n        {analysisError && <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded mb-8\">{analysisError}</div>}\n\n        {analysisResult && (\n          <Card className=\"mb-8 border border-pink-200 rounded-lg\">\n            <CardHeader>\n              <CardTitle>3. Original Data Assessment</CardTitle>\n              <CardDescription>Normality tests for the original data.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <table className=\"min-w-full divide-y divide-pink-200\">\n                    <thead className=\"bg-pink-50\">\n                        <tr>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-black-500 uppercase tracking-wider\">Test</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-black-500 uppercase tracking-wider\">Result</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-pink-200\">\n                        {analysisResult.original_normality?.shapiro_wilk && (\n                            <tr>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900\">{analysisResult.original_normality.shapiro_wilk.name}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality.shapiro_wilk.interpretation}</td>\n                            </tr>\n                        )}\n                        {analysisResult.original_normality?.dagostino_pearson && (\n                            <tr>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900\">{analysisResult.original_normality.dagostino_pearson.name}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality.dagostino_pearson.interpretation}</td>\n                            </tr>\n                        )}\n                        {analysisResult.original_normality?.kolmogorov_smirnov && (\n                            <tr>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900\">{analysisResult.original_normality.kolmogorov_smirnov.name}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality.kolmogorov_smirnov.interpretation}</td>\n                            </tr>\n                        )}\n                        <tr>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900\">Skewness</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality?.descriptive_stats?.skewness_interpretation}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900\">Kurtosis</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality?.descriptive_stats?.kurtosis_interpretation}</td>\n                        </tr>\n                        <tr className=\"bg-gray-100 font-bold\">\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-900\">Overall Assessment</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{analysisResult.original_normality?.overall_assessment?.recommendation}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </CardContent>\n          </Card>\n        )}\n\n        {analysisResult && analysisResult.all_scores && (\n          <Card className=\"mb-8 border border-pink-200 rounded-lg\">\n            <CardHeader>\n              <CardTitle>4. Transformation Scores</CardTitle>\n              <CardDescription>Scores for different transformations. Higher score is better.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <table className=\"min-w-full divide-y divide-pink-200\">\n                    <thead className=\"bg-pink-50\">\n                        <tr>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-black-500 uppercase tracking-wider\">Transformation</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-black-500 uppercase tracking-wider\">Score</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-black-500 uppercase tracking-wider\">Recommendation</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-pink-200\">\n                        {Object.entries(analysisResult.all_scores).map(([key, value]) => (\n                            <tr key={key}>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black-900 capitalize\">{key.replace('_', ' ')}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">{value.toFixed(2)}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black-500\">\n                                    {key === analysisResult.suggestion && <CheckCircle className=\"h-5 w-5 text-green-600\"/>}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </CardContent>\n          </Card>\n        )}\n\n        {analysisResult && (\n          <Card className=\"mb-8 border border-pink-200 rounded-lg\">\n            <CardHeader>\n              <CardTitle>5. Apply Transformation</CardTitle>\n              <CardDescription>Choose a transformation and apply it to your data.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <label className=\"block mb-1 font-medium\">Transformation Type</label>\n                <select value={transformChoice} onChange={e => setTransformChoice(e.target.value)} className=\"block w-full p-2 border border-pink-300 rounded-md shadow-sm\">\n                  <option value=\"untransformed\">No Transformation</option>\n                  <option value=\"log\">Log Transformation</option>\n                  <option value=\"sqrt\">Square Root Transformation</option>\n                  <option value=\"boxcox\">Box-Cox Transformation</option>\n                  <option value=\"yeo_johnson\">Yeo-Johnson Transformation</option>\n                  <option value=\"arcsine\">Arcsine Transformation</option>\n                </select>\n              </div>\n              <Button onClick={handleTransform} disabled={transformLoading || !responseCol}>\n                {transformLoading ? 'Transforming...' : 'Run Transformation'}\n              </Button>\n              {transformError && <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded mt-4\">{transformError}</div>}\n            </CardContent>\n          </Card>\n        )}\n\n        {previewData.length > 0 && (\n            <Card className=\"border border-pink-200 rounded-lg\">\n              <CardHeader>\n                <CardTitle>6. Transformed Data Preview</CardTitle>\n                <CardDescription>Showing factor, block, original, and transformed values.</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-pink-200\">\n                    <thead className=\"bg-pink-50\">\n                      <tr>\n                        {Object.keys(previewData[0] || {}).map(key => <th key={key} className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{key}</th>)}\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-pink-200\">\n                      {previewData.slice(0, 5).map((row, rowIndex) => (\n                        <tr key={rowIndex}>\n                          {Object.values(row).map((value: any, colIndex) => (\n                            <td key={colIndex} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                              {typeof value === 'number' ? value.toFixed(2) : value?.toString()}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-4 text-sm text-muted-foreground\">Total rows: {previewData.length}</div>\n                <div className=\"mt-4\">\n                  <Button onClick={handleExport} disabled={previewData.length === 0}>\n                    <Download className=\"h-4 w-4 mr-2\" />\n                    Export as CSV\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n        )}\n\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}